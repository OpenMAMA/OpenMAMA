#!/usr/bin/python
# -*- coding: utf-8 -*-
from SCons.Tool import CreateJavaClassDirBuilder
import os,re
Import('*')
env = env.Clone()

if not ConfigureJNI(env):
    print 'Java Native Interface is required...Exiting'
    Exit(1)

java_classdir_builder = CreateJavaClassDirBuilder( env)
# The default SCons Java Builder emitter is fully recusive using python
# os.walkdirs. This is probelmatic with this source structure as specifying
# the mamda directory will then pull in all files including those in options
# and orderbooks.
#
# The modified emitter is in the site_scons/site_init.py file. The only 
# change to the emitter was to use the topDown option for os.walk.
java_classdir_builder.emitter = emit_java_classes_norecurse

base_sources    = [ 'src/main/java/com/wombat/mamda', 'src/main/java/com/wombat/mamda/locks' ]
example_sources = [ 'src/main/java/com/wombat/mamda/examples' ]
options_sources = [ 'src/main/java/com/wombat/mamda/options' ]
ob_sources      = [ 'src/main/java/com/wombat/mamda/orderbook' ]

optionsExamples = Split("""
src/main/java/com/wombat/mamda/examples/MamdaOptionChainExample.java
src/main/java/com/wombat/mamda/examples/MamdaOptionChainViewExample.java
""")

orderbookExamples = Split("""
src/main/java/com/wombat/mamda/examples/MamdaBookTicker.java
src/main/java/com/wombat/mamda/examples/MamdaBookPublisher.java
src/main/java/com/wombat/mamda/examples/MamdaAtomicBookBuilder.java
src/main/java/com/wombat/mamda/examples/MamdaAtomicBookTicker.java
src/main/java/com/wombat/mamda/examples/MamdaBookSelfTest.java
src/main/java/com/wombat/mamda/examples/MamdaBookChurn.java
""")

if env['with_testtools'] == True:
    orderbookExamples.append( 'src/main/java/com/wombat/mamda/examples/MamdaBookChurn.java' )

if env['with_unittest'] == True:
    orderbookExamples.append('src/main/java/com/wombat/mamda/examples/MamdaListenerBookPublisher.java')

baseExamples = Split("""
src/main/java/com/wombat/mamda/examples/MamdaComboTicker.java
src/main/java/com/wombat/mamda/examples/MamdaQuoteTicker.java
src/main/java/com/wombat/mamda/examples/MamdaOrderImbalanceTicker.java
src/main/java/com/wombat/mamda/examples/MamdaTradeTicker.java
src/main/java/com/wombat/mamda/examples/MamdaMultiPartTicker.java
src/main/java/com/wombat/mamda/examples/MamdaMultiSecurityTicker.java
src/main/java/com/wombat/mamda/examples/MamdaListen.java
src/main/java/com/wombat/mamda/examples/MamdaSecStatusTicker.java
src/main/java/com/wombat/mamda/examples/MamdaFundamentalTicker.java
src/main/java/com/wombat/mamda/examples/MamdaAuctionTicker.java
""")

env.Append(
    JAVACFLAGS      = [ '-Xlint:deprecation'],
    JAVACLASSPATH   = [ Jars['mamajni.jar'][0].abspath,
                        Dir('classes').path,
                        Dir('classes_orderbook').path,
                        Dir('classes_options').path,
                      ],
)

base_classes    = env.Java('classes', base_sources )
options_classes = env.Java('classes_options', options_sources )
ob_classes      = env.Java('classes_orderbook', ob_sources )

commandLineProc = env.Java('classes','src/main/java/com/wombat/mamda/examples/CommandLineProcessor.java')

base_ex = []
for ex in baseExamples:
    base_ex.append ( env.Java('classes',ex) )

options_ex = []
for op in optionsExamples:
    options_ex.append( env.Java('classes_options',op) )

orderbook_ex = []
for ob in orderbookExamples:
    orderbook_ex.append( env.Java('classes_orderbook', ob) )

mamda_base = env.Jar(target='mamda.jar', source='classes', JARCHDIR = Dir('classes').abspath )
mamda_orderbook = env.Jar(target='mamda_orderbook.jar', source='classes_orderbook', JARCHDIR = Dir('classes_orderbook').abspath )
mamda_options = env.Jar(target='mamda_options.jar', source='classes_options', JARCHDIR = Dir('classes_options').abspath )

Alias('install', env.Install('$libdir', mamda_base))
Alias('install', env.Install('$libdir', mamda_orderbook))
Alias('install', env.Install('$libdir', mamda_options))

Alias('install', env.Install('$prefix/examples/com/wombat/mamda/examples', baseExamples))
Alias('install', env.Install('$prefix/examples/com/wombat/mamda/examples', orderbookExamples))
Alias('install', env.Install('$prefix/examples/com/wombat/mamda/examples', optionsExamples))


## Explicit Java Dependencies
#
# SCons does not handle Java dependencies particularly well so it is necessary
# to explicitly set the dependencies. This ensures that parallel processing 
# occurs without issue. This should not need to change often
env.Depends( base_classes, Jars['mamajni.jar'] )
env.Depends( ob_classes, [ Jars['mamajni.jar'], [ base_classes ] ] )
env.Depends( options_classes, [ Jars['mamajni.jar'], base_classes ] )

env.Depends( commandLineProc, base_classes )

env.Depends( base_ex, [ base_classes, commandLineProc ] )
env.Depends( orderbook_ex, [ base_ex, ob_classes ] )
env.Depends( options_ex, [ base_ex, options_classes ] )
